version: '3.9'

services:
  # frontend:
  #   build: ./front-end
  #   container_name: delivery-app-front-end
  #   ports:
  #     - 3000:3000
  #   platform: linux/x86_64
  #   working_dir: /front-end
  #   volumes:
  #     - ./front-end/src:/app-frontend/src
  #     - ./front-end/node_modules:/app-frontend/
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   # Os `healthcheck` devem garantir que a aplicação
  #   # está operacional, antes de liberar o container
  #   healthcheck:
  #     test: [ "CMD", "lsof", "-t", "-i:3000" ]
  #     timeout: 10s
  #     retries: 5
  #   networks:
  #     - deliveryApp
  # backend:
  #   container_name: delivery-app-back-end
  #   build: ./back-end
  #   ports:
  #     - 3001:3001
  #   platform: linux/x86_64
  #   working_dir: /back-end
  #   # Caso queira que o container esteja atualizado durante o desenvolvimento, sem que você precise ficar fazendo down e up dos containers, descomente as 3 linhas abaixo
  #   command: dev
  #   volumes:
  #     - ./back-end/src:/app-backend/src
  #     - ./back-end/node_modules:/app-backend/
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   env_file:
  #     - ./back-end/.env
  #   restart: 'always'
  #   healthcheck:
  #     test: [ "CMD", "lsof", "-t", "-i:3001" ]
  #     timeout: 10s
  #     retries: 5
  #   networks:
  #     - deliveryApp
  db:
    image: mysql:8.0.21
    container_name: db
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    restart: 'always'
    # healthcheck:
    #   test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
    #   timeout: 10s
    #   retries: 5
    # cap_add:
    #   - SYS_NICE # Deve omitir alertas menores
    # networks:
    #   deliveryApp:
    #     driver: bridge
